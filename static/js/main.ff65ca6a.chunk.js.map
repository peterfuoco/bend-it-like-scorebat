{"version":3,"sources":["components/Search/Search.js","components/itemBody/ItemBody.js","components/ItemVideo/ItemVideo.js","components/Item/Item.js","components/Filter/Filter.js","components/Container/Container.js","components/Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","console","log","className","Form","onSubmit","submit","id","Group","controlId","Label","Control","type","placeholder","Text","name","Button","variant","onClick","e","handleClear","document","getElementById","reset","ItemBody","Card","Title","body","event","team1","team2","date","customStyles","content","top","left","right","bottom","marginRight","transform","ItemVideo","React","useState","modalIsOpen","setIsOpen","closeModal","videosLength","videos","length","map","ele","index","matches","embed","match","Carousel","Item","src","isOpen","onRequestClose","style","contentLabel","interval","Modal","setAppElement","Body","Filter","teamList1","filterData","teamList2","teamList","concat","uniqueTeams","Set","eventList","uniqueEvents","dateList","uniqueDates","finalTeamList","Dropdown","finalEventList","finalDateList","DropdownButton","title","buttonState","Teams","handleSelect","Events","Dates","clearBtn","Container","searchResponse","results","key","filterToggle","filterList","filteredResponse","initialSubmit","Header","App","userInput","setUserInput","sent","setSent","setFilteredResponse","setResults","soccerData","setSoccerData","setInitialSubmit","setButtonState","getData","axios","get","then","response","data","useEffect","resetTheFilter","preventDefault","target","value","team","league","itemsToShow","side1","side2","competition","slice","filter","alert","setTimeout","formResponse","innerHTML","parentElement","children","temp","displayTemp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ff65ca6a.chunk.js","sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport \"./Search.css\";\n\nconst Search = (props) => {\n    console.log(props)\n    //Reset form fields, bring in clearing function from App to reset state\n    const resetForm = (e) => { \n        props.handleClear(e)\n        document.getElementById(\"form-reset\").reset();\n      }\n  return (\n    <div className=\"search-container\">\n      <Form onSubmit={props.submit} className='form' id='form-reset'>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Team</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter team\"  type=\"text\"\n          name=\"team\"\n          id=\"team\"/>\n          <Form.Text className=\"text-muted\">\n          e.g. Cambridge United\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label>Event/League</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Enter event/league\" />\n          <Form.Text className=\"text-muted\">\n          e.g. ENGLAND: League Cup          </Form.Text>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" type=\"date\" name=\"date\" id=\"date\" >\n          <Form.Label>Date</Form.Label>\n          <Form.Control type=\"date\" placeholder=\"Enter date\" />\n          <Form.Text className=\"text-muted\">\n          e.g. 08/25/2021          </Form.Text>\n        </Form.Group>\n        <Button variant=\"success\" type=\"submit\" className='submit'>\n          Submit\n        </Button>\n        <Button variant=\"danger\" type=\"submit\" className='submit' onClick={resetForm}>\n          Clear Search\n        </Button>\n\n        \n\n      </Form>\n    </div>\n  );\n};\n\nexport default Search;\n","import Card from \"react-bootstrap/Card\";\nimport './ItemBody.css';\nexport default function ItemBody(props) {\n    return (\n      <div className='item-body-container'>\n\n      <Card.Title>{props.body.event}</Card.Title>\n      <Card.Text>\n      {props.body.team1} vs. {props.body.team2}\n      </Card.Text>\n      <Card.Text>\n     {props.body.date}\n      </Card.Text>\n      </div>\n    );\n  }","// const DOMPurify = require('dompurify')(window);\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Button from \"react-bootstrap/Button\";\nimport './ItemVideo.css';\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nModal.setAppElement(\"#root\");\n\nexport default function ItemVideo(props) {\n  console.log(props)\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n  const videosLength= props.videos.length;\n  const videos = props.videos.map((ele, index) => {\n    let matches = ele.embed.match(/\\bhttps?:\\/\\/\\S+/gi)\n    return (\n\n      <Carousel.Item key={index}>\n        <iframe src={matches}></iframe>\n      </Carousel.Item>\n    )\n  });\n\n  return (\n    <div className='item-video-container'>\n            <Button variant=\"primary\" onClick={openModal}>Highlights</Button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n\n        <Button className='button' variant=\"danger\" onClick={closeModal}>Close</Button>\n        <div>Number of Highlight videos: {videosLength}</div>\n        <Carousel interval={null}>\n  \n        {videos}\n        </Carousel>\n\n      </Modal>\n    </div>\n  );\n}\n","import ItemBody from \"../itemBody/ItemBody\";\nimport ItemVideo from \"../ItemVideo/ItemVideo\";\nimport Card from \"react-bootstrap/Card\";\nimport './Item.css';\nexport default function Item(props) {\n\n  return (\n    <Card className='item-size' >\n      <Card.Body>\n              <ItemBody\n            body={props}\n            />\n             <ItemVideo\n      videos={props.videos}\n\n       />\n      </Card.Body>\n    </Card>\n  );\n}\n","import Dropdown from \"react-bootstrap/Dropdown\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Button from \"react-bootstrap/Button\";\nimport './Filter.css';\n// import React, { useEffect, useState } from \"react\";\n\nexport default function Filter (props) {\n    // console.log(props.buttonState.Dates)\n      //Team filtering\n        const teamList1 = props.filterData.map((ele) => {\n        return (ele.team1)\n      });\n      const teamList2 = props.filterData.map((ele) => {\n        return (ele.team2)\n      });\n      const teamList = teamList1.concat(teamList2)\n      const uniqueTeams = [...new Set(teamList)];\n      // console.log(uniqueTeams)\n      //Event filtering\n      const eventList = props.filterData.map((ele) => {\n        return (ele.event)\n      });\n      let uniqueEvents = [...new Set(eventList)];\n      // Date filtering\n      const dateList = props.filterData.map((ele) => {\n        return (ele.date)\n      });\n      let uniqueDates = [...new Set(dateList)];\n      \n      // Rendering dropdown items\n      const finalTeamList = uniqueTeams.map((ele) => {\n        return (\n            <Dropdown.Item >{ele}</Dropdown.Item>\n        )\n      });\n      const finalEventList = uniqueEvents.map((ele) => {\n        return (\n            <Dropdown.Item>{ele}</Dropdown.Item>\n        )\n      });\n      const finalDateList = uniqueDates.map((ele) => {\n        return (\n            <Dropdown.Item>{ele}</Dropdown.Item>\n        )\n      });\n\n    return (\n        <div className=\"flex-filter-container\">\n                  <h3>Filter:</h3>\n            <DropdownButton data-display=\"static\" variant=\"info\" className='filter-button' title={props.buttonState.Teams} onClick={props.handleSelect} id='team-dropdown'>\n                 {finalTeamList}\n            </DropdownButton>\n            <DropdownButton data-display=\"static\" variant=\"info\" className='filter-button' title={props.buttonState.Events}  onClick={props.handleSelect} id='event-dropdown'>\n                 {finalEventList}\n            </DropdownButton>\n            <DropdownButton   data-display=\"static\" variant=\"info\" className='filter-button' title={props.buttonState.Dates}  onClick={props.handleSelect} id='date-dropdown'>\n                 {finalDateList}\n            </DropdownButton>\n\n            <Button variant=\"danger\" onClick={props.clearBtn}>Clear Filter</Button>{' '}\n        </div>\n)\n}","import Item from \"../Item/Item\";\nimport Filter from \"../Filter/Filter\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./Container.css\";\nconst Container = (props) => {\n  // console.log(props);\n\n  // Add results to item component\n  const searchResponse = props.results.map((ele, index) => {\n    return <Item {...ele} key={index} />;\n  });\n\n  return (\n    <div className=\"main-flex-container\">\n      {/* Boolean for if search done or not, if not show soccer ball  */}\n      {!props.filterToggle[0] ? (\n        <div className=\"soccer-ball\"> </div>\n      ) : (\n        props.filterToggle[0]\n      )}\n      {/* Boolean for if search done or not, if not show Filter dropdown  */}\n\n      {props.filterToggle[0] ? (\n        <Filter\n          filterData={props.results}\n          filterList={props.filterList}\n          handleSelect={props.handleSelect}\n          filteredResponse={props.filteredResponse}\n          initialSubmit={props.initialSubmit}\n          buttonState={props.buttonState}\n          clearBtn={props.clearBtn}\n        />\n      ) : (\n        props.filterToggle\n      )}\n      <div className=\"item-container\">\n        {searchResponse ? searchResponse : <div>sorry try again</div>}\n      </div>\n    </div>\n  );\n};\nexport default Container;\n","import './Header.css';\nconst Header = ()=> { \n    return (\n        <div className='header-container'>\n\n        <h1>Bend it like ScoreBat  </h1>\n        <h2>\n            An app to search for soccer highlights\n             </h2>\n             <p>Enter 1 search field and filter below</p>\n       </div>\n    )\n}\n\nexport default Header;","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Search from \"./components/Search/Search\";\nimport Container from \"./components/Container/Container\";\nimport Header from \"./components/Header/Header.js\";\nconst initialState = {};\n\nfunction App() {\n  // User input from Search form\n  const [userInput, setUserInput] = useState([]);\n  //Toggle container view\n  const [sent, setSent] = useState([false]);\n  // State for filtered view\n  const [filteredResponse, setFilteredResponse] = useState([]);\n  // User results from search\n  const [results, setResults] = useState([]);\n  // Api results from axios\n  const [soccerData, setSoccerData] = useState([]);\n  // Filter results after user search results\n  const [initialSubmit, setInitialSubmit] = useState([]);\n  // useEffect(() => { setInitialSubmit(initialSubmit)}, [])\n  const [buttonState, setButtonState] = useState({\n    Teams: \"Teams\",\n    Events: \"Events\",\n    Dates: \"Dates\",\n  });\n\n  ////// API REQUEST\n  const getData = () => {\n    axios.get(\"https://www.scorebat.com/video-api/v1/\").then((response) => {\n      const soccerData = response.data;\n      setSoccerData(soccerData);\n    });\n  };\n  useEffect(() => getData(), []);\n\n  ////// FORM SUBMIT\n  const submit = (e) => {\n    e.preventDefault();\n    // Condition if user input is empty \n    if (!e.target[0].value && !e.target[1].value && !e.target[2].value) {\n      alert(\"Please enter 1 search criteria\");\n    } else {\n      let userInput = {\n        team: e.target[0].value,\n        league: e.target[1].value,\n        date: e.target[2].value,\n      };\n      setUserInput(userInput);\n  \n      setSent([true]);\n      //Filter API RESPONSE\n      let cleanedApiData = soccerData.map((value) => {\n        let team1 = value.side1.name;\n        let team2 = value.side2.name;\n        let videos = value.videos;\n        let event = value.competition.name;\n        let date = value.date;\n        //Format date to MMDDYYYY format\n        date = date.slice(0, 10);\n        let newTeam = {\n          team1: team1,\n          team2: team2,\n          videos: videos,\n          event: event,\n          date: date,\n        };\n        return newTeam;\n      });\n\n      let itemsToShow = cleanedApiData.filter(\n        (team) =>\n          // filter over all API response teams, finding where it matches the user input\n          team.team1 === userInput.team ||\n          team.team2 === userInput.team ||\n          team.event === userInput.league ||\n          team.date === userInput.date\n      );\n\n      setResults(itemsToShow);\n      setFilteredResponse(itemsToShow);\n    }\n  };\n//Function to handle filter button selection\n  const handleSelect = (e) => {\n    //Verify the target is not the dropdown menu title button before updating results\n    if (\n      e.target.innerHTML !== \"Teams\" &&\n      e.target.innerHTML !== \"Events\" &&\n      e.target.innerHTML !== \"Dates\"\n    ) {\n      if (\n        e.target.parentElement.parentElement.children[0].id === \"team-dropdown\"\n      ) {\n        setUserInput({ ...userInput, team: e.target.innerHTML });\n        let temp = e.target.innerHTML;\n        let displayTemp = temp.slice(0, 10) + \"...\";\n        setButtonState({ ...buttonState, Teams: displayTemp });\n        let itemsToShow = results.filter(\n          (team) =>\n            // filter over all API response teams, finding where it matches the user input\n            team.team1 === temp || team.team2 === temp\n        );\n        setResults(itemsToShow);\n        resetTheFilter();\n      } else if (\n        e.target.parentElement.parentElement.children[0].id === \"event-dropdown\"\n      ) {\n        setUserInput({ ...userInput, league: e.target.innerHTML });\n        let temp = e.target.innerHTML;\n        let displayTemp = temp.slice(0, 10) + \"...\";\n        setButtonState({ ...buttonState, Events: displayTemp });\n        let itemsToShow = results.filter(\n          (team) =>\n            // filter over all API response teams, finding where it matches the user input\n            team.event === temp\n        );\n        setResults(itemsToShow);\n        resetTheFilter();\n      } else if (\n        e.target.parentElement.parentElement.children[0].id === \"date-dropdown\"\n      ) {\n        setUserInput({ ...userInput, date: e.target.innerHTML });\n        console.log(userInput);\n        let temp = e.target.innerHTML;\n        let displayTemp = temp.slice(0, 10) + \"...\";\n        setButtonState({ ...buttonState, Dates: displayTemp });\n\n        let itemsToShow = results.filter(\n          (team) =>\n            // filter over all API response teams, finding where it matches the user input\n            team.date === temp\n        );\n        setResults(itemsToShow);\n        resetTheFilter();\n      }\n    }\n  };\n  //Put initial search results back into Container component\n  const resetTheFilter = () => {\n    setInitialSubmit(results);\n  };\n\n// Handles Reset Search button\n  const resetTheState = () => {\n    setUserInput([]);\n    setSent([]);\n    setFilteredResponse([]);\n    setResults([]);\n    setSoccerData([]);\n    setInitialSubmit([]);\n    setButtonState({ Teams: \"Teams\", Events: \"Events\", Dates: \"Dates\" });\n  };\n  //Pass the function to Search form to reset form fields and all initialstates\n  const handleClear = (e) => {\n    e.preventDefault();\n\n    setTimeout(() => {\n      resetTheState();\n      getData();\n    }, 1000);\n  };\n\n\n//Clears dropdown button text and changes back to initial state\n  const clearBtn = () => {\n    console.log(results);\n    setResults(filteredResponse);\n    console.log(results);\n    setButtonState({ Teams: \"Teams\", Events: \"Events\", Dates: \"Dates\" });\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Search submit={submit} handleClear={handleClear} />\n      <Container\n        setResults={setResults}\n        formResponse={userInput}\n        filterToggle={sent}\n        results={results}\n        filteredResponse={filteredResponse}\n        handleSelect={handleSelect}\n        clearBtn={clearBtn}\n        initialSubmit={initialSubmit}\n        buttonState={buttonState}\n      />\n    </div>\n  );\n}\n\nexport default App;\n// https://gomockingbird.com/projects/wp62ohw\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}